#!usr/bin/env/python3
# Name: Pulkit Nayyar
# SID: 152096210

import os
import subprocess
import pwd

def userexist(username):             # Function to Check if the user provided exists
    userslist = pwd.getpwall()
    # getpwall() returns a list of users represented in tuple with various user details like username, user id etc
    for user in userslist:
        #loops through each user through the list
        if user.pw_name == username:
            # pw_name is one of the attribute which fetches just the username.
            return True
            # Returns true if username is found in the list
    return False
    # Returns False if username is not in the list 

def makesudoer():                    # Function to grant Sudo access to a specified user
    user = input("Enter the user to escalate permissions: ").strip()
    # getting the user to make changes to .strip() is used to remove any accidental and unwanted spaces or newline characters
    if not user:
    # input control code to check empty inputs
        print("Error: Please provide a user.")
        # Prints a general message asking for an input and exits the function if no user is provided
        return

    if userexist(user):
    # calls userexists(user) function if True proceeds with the inside code, if False executes the else block
        try:
            os.system(f"sudo usermod -aG sudo {user}")
            # os.system() is used to execute a command in shell or as command is executed in terminal 
            print(f"{user} has been added to the sudoers.")
            # prints a message of succesful execution and function performed
        except Exception:
            # It is used to catch any Exception generated by the try block
            print(f"Error: Cannot add '{user}' to the sudoers.")
            # prints a friendly message of what the function could not perform
            print(Exception)
            # prints the Error/Exception generated while execution
    else:
        print(f"{user} does not exist")
        # prints the helfful message if userexist() function could not find the user

def updatepasswd():
    user = input("Enter the user to change the password: ").strip()

    if not user:
        print("Error: no user provided.")
        return

    if userexist(user):
        try:
            print(f"Changing password for user '{user}'.")
            subprocess.run(["sudo", "passwd", user], check=True)
            print(f"Password for user '{user}' updated")
        except subprocess.CalledProcessError:
            print(f"Error: Cannot change password for user '{user}'.")
            print(subprocess.CalledProcessError)
    else:
        print(f"user: {user} does not exist.")

def removesudoer():
    user = input("Enter the user to remove sudo access").strip()
    if not user:
        print("Error: Please provide a user.")
        return

    if userexist(user): 
        try:
            os.system(f"sudo deluser {user} sudo")
            print(f"{user} has been removed from the sudoers.")
        except Exception:
            print(f"Error: Cannot remove '{user}' from the sudoers.")
            print(Exception)
    else:
        print(f"{user} does not exist")

    
def update_user():
    """
    This function will update user permissions,(if possible username, and password.)
    """
    print("Please choose an option:")
    print("1. Change a user password")
    print("2. Make a user sudoer")
    print("3. Remove sudo access from a user ")
    print("4. exit")
    
    try:
        opt = int(input("Enter your option: ").strip())
    except ValueError:
        print("Invalid option")
        return

    if opt == 1:
        updatepasswd()
    elif opt == 2:
        makesudoer()
    elif opt == 3:
        removesudoer()
    elif opt == 4:
        print("----------Exiting----------.")
        return
    else:
        print("Invalid option")
